{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/like/like.component.css","webpack:///./src/app/like/like.component.html","webpack:///./src/app/like/like.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/newreview/newreview.component.css","webpack:///./src/app/newreview/newreview.component.html","webpack:///./src/app/newreview/newreview.component.ts","webpack:///./src/app/reviews/reviews.component.css","webpack:///./src/app/reviews/reviews.component.html","webpack:///./src/app/reviews/reviews.component.ts","webpack:///./src/app/update/update.component.css","webpack:///./src/app/update/update.component.html","webpack:///./src/app/update/update.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewComponent } from './new/new.component';\nimport { UpdateComponent } from './update/update.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { NewreviewComponent } from './newreview/newreview.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: 'new', component: NewComponent},\n  { path: 'pets/:id/edit', component: UpdateComponent},\n  { path: 'pets/:id', component:ReviewsComponent},\n  { path: 'new/:id/reviews', component: NewreviewComponent},\n  { path: '', component:HomeComponent}\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n\\n\\n<!-- <div>\\n  <h1>Let's eat</h1><br>\\n  <button (click)=\\\"refresh()\\\">Refresh</button>\\n  <button [routerLink]=\\\"['/new']\\\">New Resurant</button><br>\\n\\n  <table class=\\\"table\\\">\\n    <tr>\\n      <th>Resturants</th>\\n      <th>Cuisine</th>\\n      <th>Actions Available</th>\\n    </tr>\\n    <tr *ngFor=\\\"let task of tasks\\\" >\\n      <td>{{task.title}}</td>\\n      <td>{{task.description}} </td>\\n      <td>\\n        <button [routerLink]=\\\"['/reviews', task._id, 'reviews']\\\">Read Reviews</button>\\n        <button [routerLink]=\\\"['/update', task._id, 'edit']\\\">Update</button>\\n        <Button (click)=\\\"deleteTask(task._id)\\\">Delete</Button>\\n      </td>\\n    </tr>\\n  </table>\\n  \\n</div> -->\\n<router-outlet></router-outlet>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @Input()\n  tasks: any;\n\n  ngOnInit() {\n    // this.tasks = {title: \"\", description: \"\"},\n    // this.getallshit();\n  }\n\n  // getallshit(){\n  //   let obs = this._httpService.getTasks();\n  //   obs.subscribe(data => {\n  //     // console.log(data);\n      \n  //     this.tasks=data;\n  //   })\n  // }\n\n  // deleteTask(id:any){\n  //   let obs = this._httpService.deleteTask(id,this.tasks);\n  //   obs.subscribe(data => {\n  //     this.getallshit();\n  //   })\n  // }\n\n  // refresh(): void {\n  //   window.location.reload();\n  //   this._router.navigate(['/'])\n  // }\n\n\n\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) {\n    // _httpService.getTasks();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewComponent } from './new/new.component';\nimport { UpdateComponent } from './update/update.component';\nimport { ReviewsComponent } from './reviews/reviews.component';\nimport { NewreviewComponent } from './newreview/newreview.component';\nimport { HomeComponent } from './home/home.component';\nimport { LikeComponent } from './like/like.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    UpdateComponent,\n    ReviewsComponent,\n    NewreviewComponent,\n    HomeComponent,\n    LikeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\\\" integrity=\\\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\\\" crossorigin=\\\"anonymous\\\">\\n<div>\\n  <h1>Pet Shelter</h1><br>\\n  <h3>These pets are looking for home!</h3>\\n  <!-- <button (click)=\\\"refresh()\\\">Refresh</button> -->\\n  <button [routerLink]=\\\"['/new']\\\">Add a pet to the shelter</button><br>\\n\\n  <table class=\\\"table table-striped\\\">\\n    <tr>\\n      <th>Name</th>\\n      <th>Type</th>\\n      <th>Actions</th>\\n    </tr>\\n    <tr *ngFor=\\\"let task of tasks\\\" >\\n      <td>{{task.title}}</td>\\n      <td>{{task.type}} </td>\\n      <td>\\n        <button [routerLink]=\\\"['/pets', task._id]\\\">Details</button>\\n        <button [routerLink]=\\\"['/pets', task._id, 'edit']\\\">Edit</button>\\n        <Button (click)=\\\"deleteTask(task._id)\\\">Delete</Button>\\n      </td>\\n    </tr>\\n  </table>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  @Input()\n  tasks: any;\n\n  ngOnInit() {\n    this.tasks = {title: \"\", description: \"\"},\n    this.getallshit();\n  }\n\n  getallshit(){\n    let obs = this._httpService.getTasks();\n    obs.subscribe(data => {\n      // console.log(data);\n      \n      this.tasks=data;\n    })\n  }\n\n  deleteTask(id:any){\n    let obs = this._httpService.deleteTask(id,this.tasks);\n    obs.subscribe(data => {\n      this.getallshit();\n    })\n  }\n\n  refresh(): void {\n    this._router.navigate(['/'])\n  }\n\n\n\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) {\n    // _httpService.getTasks();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  \n  constructor(private _httpClient: HttpClient) { }\n  \n  getTasks () {\n    return this._httpClient.get('/new');\n  }\n  \n  SubmitNewTask(task) {\n    return this._httpClient.post('/new',task);\n  }\n  \n  updateTask(id, editTask){\n    return this._httpClient.put(`/update/${id}/edit`, editTask);\n  }\n  \n  getTasksone(id: any) {\n    return this._httpClient.get(`/update/${id}`);\n  }\n  \n  deleteTask(id, task){\n    return this._httpClient.delete(`/update/${id}`,task);\n  }\n  createReview(id, newReview) {\n    return this._httpClient.post(`/new/${id}/reviews`, newReview);\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpa2UvbGlrZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  like works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-like',\n  templateUrl: './like.component.html',\n  styleUrls: ['./like.component.css']\n})\nexport class LikeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<form (submit)=\\\"SubmitNewTask()\\\">\\n  <!-- use the json pipe to see how newTask changes in real time -->\\n  <h1>Pet Shelter</h1>\\n  <h3>Know of a pet needing a home?</h3>\\n  \\n  <p>\\n    <label for=\\\"title\\\">Pet name: </label><br>\\n    <input type=\\\"text\\\" name=\\\"task.title\\\"  [(ngModel)]=\\\"task.title\\\" autocomplete=\\\"off\\\"/>\\n  </p>\\n  <p>\\n    <label for=\\\"title\\\">Pet type: </label><br>\\n    <input type=\\\"text\\\" name=\\\"task.type\\\"  [(ngModel)]=\\\"task.type\\\" autocomplete=\\\"off\\\"/>\\n  </p>\\n  <p>\\n    <label for=\\\"description\\\">Description: </label><br>\\n    <input type=\\\"text\\\" name=\\\"task.description\\\" [(ngModel)]=\\\"task.description\\\" autocomplete=\\\"off\\\" />\\n  </p>\\n  <p>Skill:</p>\\n  <p>\\n    <label for=\\\"title\\\">Skill 1: </label><br>\\n    <input type=\\\"text\\\" name=\\\"task.skill1\\\"  [(ngModel)]=\\\"task.skill1\\\" autocomplete=\\\"off\\\"/>\\n  </p>\\n  <p>\\n    <label for=\\\"title\\\">Skill 2: </label><br>\\n    <input type=\\\"text\\\" name=\\\"task.skill2\\\"  [(ngModel)]=\\\"task.skill2\\\" autocomplete=\\\"off\\\"/>\\n  </p>\\n  <p>\\n    <label for=\\\"title\\\">Skill 3: </label><br>\\n    <input type=\\\"text\\\" name=\\\"task.skill3\\\"  [(ngModel)]=\\\"task.skill3\\\" autocomplete=\\\"off\\\"/>\\n  </p>\\n  \\n  <input type=\\\"hidden\\\" #like=\\\"ngModel\\\" name=\\\"task.like\\\"  [(ngModel)]=\\\"task.like\\\" value=\\\"0\\\">\\n\\n  <input type=\\\"submit\\\" value=\\\"Add pet\\\" /><button [routerLink]=\\\"['']\\\">Cancel</button>\\n</form>\\n\\n\\n<p *ngIf = \\\"anyerror\\\">{{error.errors}}</p>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  @Input()\n  task: any;\n  anyerror: boolean;\n  error:any;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n\n    this.task = {title: '', type: ''}\n    this.anyerror = false;\n  }\n\n  SubmitNewTask(){\n    console.log(this.task);\n    let obs = this._httpService.SubmitNewTask(this.task);\n    obs.subscribe((data:any) => {\n      if(data.errors){\n        this.anyerror=true;\n        this.error={\n          errors:data.message\n        }\n      }\n      else{\n        this.task = {title: '', type: ''}\n        console.log('Added new', data)\n        this._router.navigate(['/'])\n      }\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ld3Jldmlldy9uZXdyZXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Adding New Reviews!</h1>\\n\\n\\n<form (submit)='createReview()'>\\n  <p>\\n    <label for=\\\"name\\\">Name: </label>\\n    <input type=\\\"text\\\" name=\\\"newReview.name\\\" [(ngModel)]=\\\"newReview.name\\\">\\n  </p>\\n  <p>\\n    <label for=\\\"star\\\">Stars: </label>\\n    <select name=\\\"newReview.star\\\"  [(ngModel)]=\\\"newReview.star\\\">\\n      <option value=\\\"5\\\">5</option>\\n      <option value=\\\"4\\\">4</option>\\n      <option value=\\\"3\\\">3</option>\\n      <option value=\\\"2\\\">2</option>\\n      <option value=\\\"1\\\">1</option>\\n    </select>\\n  </p>\\n  <p>\\n    <label for=\\\"description\\\">Description: </label>\\n    <input type=\\\"text\\\" name=\\\"newReview.description\\\" [(ngModel)]=\\\"newReview.description\\\">\\n  </p>\\n  <input type=\\\"submit\\\" value=\\\"Add Review\\\">\\n</form>\\n<button [routerLink]=\\\"['']\\\">Go back</button>\\n\\n<p *ngIf = \\\"anyerror\\\">{{error.errors}}</p>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-newreview',\n  templateUrl: './newreview.component.html',\n  styleUrls: ['./newreview.component.css']\n})\nexport class NewreviewComponent implements OnInit {\n  @Input()\n  thistask:any;\n  newReview:any;\n  anyerror: boolean;\n  error:any;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.newReview = {star: 5, description: \"\"}\n    this.anyerror = false;\n    this._route.params.subscribe(params => {\n      // console.log(params); //log the entire params\n      // console.log(params['id']); //log the id\n      this.thistask = params['id']\n      // this.getoneshit();\n      \n    });\n  }\n  \n\n\n\n  createReview(){\n    let obs = this._httpService.createReview(this.thistask, this.newReview);\n    obs.subscribe((data:any) =>{\n      if (data.errors){\n        this.anyerror=true;\n        this.error={\n          errors:data.message\n        }\n      }\n      else{\n\n        console.log(data);\n        // this.allCakes.push(data);\n        this._router.navigate([`/reviews/${this.thistask}/reviews`])\n      }\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jldmlld3MvcmV2aWV3cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\\\" integrity=\\\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\\\" crossorigin=\\\"anonymous\\\">\\n\\n<h1>Pet Shelter</h1>\\n<h3>Details about {{tasks.title}}</h3><a [routerLink]=\\\"['']\\\">Home</a>\\n\\n<!-- <button [routerLink]=\\\"['/new', thistask._id, 'reviews']\\\">New Review</button> -->\\n\\n<!-- <button (click)=\\\"addnewreview(thistask)\\\">Add New Review</button> -->\\n<!-- <button [routerLink]=\\\"['/new', thistask,'reviews']\\\">Add New Review</button> -->\\n\\n<table>\\n  <tr>\\n    <td>Pet type</td>\\n    <td>{{tasks.type}}</td>\\n  </tr>\\n  <tr>\\n    <td>Description:</td>\\n    <td>{{tasks.description}}</td>\\n  </tr>\\n  <tr>\\n    <td>Skills:</td>\\n    <td>{{tasks.skill1}}</td>\\n  </tr>\\n  <tr>\\n    <td>&nbsp;</td>\\n    <td>{{tasks.skill2}}></td>\\n  </tr>\\n  <tr>\\n    <td>&nbsp;</td>\\n    <td>{{tasks.skill3}}</td>\\n  </tr>\\n  <tr>\\n    <td>Likes:</td>\\n    <td>{{likes}}</td>\\n  </tr>\\n</table>\\n<form (click)='addlike()'>\\n  <button type=\\\"submit\\\">Like this pet</button>\\n</form>\\n<button>Adopt this pet!</button>\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- <table class=\\\"table table-striped\\\">\\n  <tr>\\n    <th>Customer</th>\\n    <th>Stars</th>\\n    <th>Descriptions</th>\\n  </tr>\\n  <tr *ngFor=\\\"let review of tasks.reviews\\\">\\n    <td>{{review.name}}</td>\\n    <td>{{review.star}}</td>\\n    <td>{{review.description}}</td>\\n  </tr>\\n  \\n</table> -->\\n\\n\\n\\n<!-- <app-newreview *ngIf='visibility' [RestforReview] = 'thistask' ></app-newreview> -->\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router, Params } from '@angular/router'\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.css']\n})\nexport class ReviewsComponent implements OnInit {\n  @Input()\n  thistask: any;\n  tasks: any;\n  visibility : boolean;\n  alltasks:any;\n  likes:number;\n  \n  \n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.likes=0;\n    this.alltasks = {title: \"\", description: \"\", like:'0'},\n    this.tasks = {name:'', star: '', description: ''},\n    this.getallshit();\n    this.visibility = false;\n    this._route.params.subscribe(params => {\n      // console.log(params); //log the entire params\n      // console.log(params['id']); //log the id\n      this.thistask = params['id']\n      this.getoneshit();\n      \n    });\n  }\n\n  addlike(){\n    this.likes  += 1;\n    \n  }\n\n\n\n  getoneshit(){\n    //let obs = this._httpService.getTasks(this.id);\n    let obs = this._httpService.getTasksone(this.thistask);\n    obs.subscribe(data => {\n      console.log(data);\n      this.tasks=data;\n    })\n  }\n\n  getallshit(){\n    let obs = this._httpService.getTasks();\n    obs.subscribe(data => {\n      // console.log(data);\n      \n      this.alltasks=data;\n    })\n  }\n  addnewreview(thistask){\n    this.visibility = true;\n  }\n\n  \n  \n\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS91cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form (submit)=\\\"updateTask()\\\">\\n  <!-- use the json pipe to see how newTask changes in real time -->\\n  <h1>Pet Shlter</h1><br>\\n  <h3>Edit this pet</h3>\\n\\n  <p>\\n    <label for=\\\"title\\\">Pet Name: </label>\\n    <input type=\\\"text\\\" name=\\\"editTask.title\\\"  [(ngModel)]=\\\"editTask.title\\\" />\\n  </p>\\n  <p>\\n      <label for=\\\"type\\\">Pet Type: </label>\\n      <input type=\\\"text\\\" name=\\\"editTask.type\\\"  [(ngModel)]=\\\"editTask.type\\\" />\\n    </p>\\n  <p>\\n    <label for=\\\"description\\\">Cuisine: </label>\\n    <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)]=\\\"editTask.description\\\"/>\\n  </p>\\n  <p>Skill (optional):</p>\\n  <p>\\n    <label for=\\\"title\\\">Skill 1: </label><br>\\n    <input type=\\\"text\\\" name=\\\"editTask.skill1\\\"  [(ngModel)]=\\\"editTask.skill1\\\" />\\n  </p>\\n  <p>\\n    <label for=\\\"title\\\">Skill 2: </label><br>\\n    <input type=\\\"text\\\" name=\\\"editTask.skill2\\\"  [(ngModel)]=\\\"editTask.skill2\\\" />\\n  </p>\\n  <p>\\n    <label for=\\\"title\\\">Skill 3: </label><br>\\n    <input type=\\\"text\\\" name=\\\"editTask.skill3\\\"  [(ngModel)]=\\\"editTask.skill3\\\" />\\n  </p>\\n  <button [routerLink]=\\\"['']\\\">Cancel</button>\\n  <input type=\\\"submit\\\" value=\\\"Edit pet\\\" />\\n</form>\\n\\n<p *ngIf = \\\"anyerror\\\">{{error.errors}}</p>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  @Input()\n  toEdit: any;\n  editTask: any;\n  anyerror: boolean;\n  error:any;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.editTask = {title: '', description: '' }\n    this.anyerror = false;\n    this._route.params.subscribe(params => {\n      console.log(params); //log the entire params\n      console.log(params['id']); //log the id\n      this.toEdit = params['id']\n      this.getoneshit();\n      \n    });\n  }\n\n  getoneshit(){\n    //let obs = this._httpService.getTasks(this.id);\n    let obs = this._httpService.getTasksone(this.toEdit);\n    obs.subscribe(data => {\n      this.editTask=data;\n    })\n  }\n\n\n  updateTask(){\n    let obs = this._httpService.updateTask(this.toEdit, this.editTask)\n    obs.subscribe((data:any) => {\n      if (data.errors){\n        this.anyerror=true;\n        this.error={\n          errors:data.message\n        }\n      }\n      else {\n        this.editTask = data\n        this._router.navigate(['/'])\n        \n\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}